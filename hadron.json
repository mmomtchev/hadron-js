  
  {
    "minimumXpmRequired": "0.20.0",
    "liquidPlugins": [
      "@mmomtchev/hadron"
    ],
    "devDependencies": {
      "@mmomtchev/python-xpack": "3.12.11-2",
      "@mmomtchev/meson-xpack": "1.8.0-2",
      "@mmomtchev/conan-xpack": "2.18.1-1",
      "@xpack-dev-tools/cmake": "3.27.9-1.2",
      "@xpack-dev-tools/ninja-build": "1.11.1-3.1"
    },
    "properties": {
      "buildFolderRelativePath": "{{ 'build' | path_join: configuration.name | to_filename | downcase }}",
      "installFolderPath": "{{ '/' | path_join: properties.cwd | path_join: 'lib' | path_join: 'binding' | path_join: properties.platformId }}",
      "commandConanBuildEnv": {
        "win32": "{{ properties.buildFolderRelativePath }}\\conanbuild.bat && ",
        "linux": ". {{ properties.buildFolderRelativePath }}/conanbuild.sh && ",
        "darwin": ". {{ properties.buildFolderRelativePath }}/conanbuild.sh && "
      },
      "commandShowEnv": {
        "win32": "set",
        "linux": "env",
        "darwin": "env"
      },
      "argsMesonPrepare": "",
      "argsMesonCompile": "",
      "configNative": "{% ifNpmOption standalone_build %}native-xpack{% else %}native{% endifNpmOption %}",
      "cwd": "{{ path.sep | path_relative: '.' }}",
      "commandGenerateImageMagickConfigure": "cmake -S deps/ImageMagick -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DMAGICK_HDRI_ENABLE=ON -DMAGICKCORE_QUANTUM_DEPTH=16 -B preconf",
      "commandGenerate_magickcore": "node src/deps.js src/deps-stub.cc MagickCore swig/magickcore.i",
      "commandGenerate_magickpp": "node src/deps.js src/deps-stub.cc deps/ImageMagick/Magick\\\\+\\\\+ swig/magick++.i",
      "commandGenerate_magickwand": "node src/deps.js src/deps-stub.cc deps/ImageMagick/MagickWand swig/magickwand.i",
      "commandGenerateWrappers": "swig-jse -DGIT_BRANCH=\"%{ // Generated by SWIG on branch `git branch --show-current` `date` %}\" -javascript -typescript -napi -c++ -split -exports '../native/index.cjs' -Ideps/ImageMagick/Magick++/lib -Ideps/ImageMagick -Ipreconf -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -o swig/magickwand-js.cxx -outdir swig src/Magick++.i",
      "argsConanShared": "--build=missing --settings=build_type={{ properties.buildType | capitalize }} -pr:b=conan.profile -pr:h=conan.profile {% conanOptions %}",
      "argsConanNative": "-pr:h={% conanProfiles %}{{ path.sep }}{{ properties.toolchain }}-{{ os.platform }}.profile -pr:b={% conanProfiles %}{{ path.sep }}{{ properties.toolchain }}-{{ os.platform }}.profile",
      "argsConanWASM": "-pr:b=default -pr:h={% conanProfiles %}{{ path.sep }}{{ properties.toolchain }}.profile",
      "commandConanDependencies": "conan install . {{ properties.argsConanShared }} -of {{ properties.buildFolderRelativePath }} {% conanOptions %}",
      "commandDependenciesNative": "{{ properties.commandConanDependencies }} {{ properties.argsConanNative }}",
      "commandDependenciesWASM": "{{ properties.commandConanDependencies }} {{ properties.argsConanWASM }}",
      "commandConanLock": "conan lock create . {{ properties.argsConanShared }}",
      "commandConanLockNative": "{{ properties.commandConanLock }} {{ properties.argsConanNative }}",
      "commandConanLockWASM": "{{ properties.commandConanLock }} {{ properties.argsConanWASM }}",
      "commandPrepare": "{{ properties.commandConanBuildEnv[os.platform] }} meson setup --backend ninja --buildtype {{ properties.buildType }} {{ properties.buildFolderRelativePath }} . -Dprefix={{ properties.installFolderPath }} {{ properties.argsMesonPrepare }} {% mesonOptions %}",
      "commandPrepareNative": "{{ properties.commandPrepare }} --native-file {% conanProfiles %}{{ path.sep }}conan.ini --native-file {{ properties.buildFolderRelativePath }}/conan_meson_native.ini",
      "commandPrepareWASM": "{{ properties.commandPrepare }} --cross-file {% conanProfiles %}{{ path.sep }}conan.ini --cross-file {{ properties.buildFolderRelativePath }}/conan_meson_cross.ini",
      "commandConfigure": "meson configure {{ properties.buildFolderRelativePath }}",
      "commandBuild": "{{ properties.commandConanBuildEnv[os.platform] }} meson compile -C {{ properties.buildFolderRelativePath }} -v",
      "commandInstall": "meson install -C {{ properties.buildFolderRelativePath }}",
      "commandClean": "meson compile -C {{ properties.buildFolderRelativePath }} --clean",
      "verbose": "{% ifNpmOption loglevel %}--verbose{% endifNpmOption %}",
      "scriptInstallNative": "npx prebuild-install -d {{ properties.verbose }} || ( npx xpm install && npx xpm install --config {{ properties.configNative }} && xpm run prepare --config {{ properties.configNative }} && xpm run build --config {{ properties.configNative }} )",
      "scriptInstallWASM": "npx prebuild-install --platform emscripten --arch wasm32 -d {{ properties.verbose }} || ( npx xpm install && xpm run prepare --config wasm && xpm run build --config wasm )"
    },
    "actions": {
      "showMesonOptions": "echo \"{% mesonOptions %}\"",
      "showConanOptions": "echo \"{% conanOptions %}\"",
      "npm-install": [
        "{% if ifNpmOption loglevel %}{{ properties.commandShowEnv[os.platform] }}{% endifNpmOption %}",
        "{% unlessNpmOption skip_native %}{{ properties.scriptInstallNative }}{% endunlessNpmOption %}",
        "{% unlessNpmOption skip_wasm %}{{ properties.scriptInstallWASM }}{% endunlessNpmOption %}"
      ],
      "python": "python",
      "meson": "meson",
      "conan": "conan",
      "env": "{{ properties.commandShowEnv[os.platform] }}"
    },
    "buildConfigurations": {
      "native": {
        "properties": {
          "buildType": "release",
          "toolchain": "system",
          "platformId": "{{ os.platform | concat: '-' | concat: os.arch }}"
        },
        "actions": {
          "prepare": [
            "{{ properties.commandDependenciesNative }}",
            "{{ properties.commandPrepareNative }}"
          ],
          "configure": "{{ properties.commandConfigure }}",
          "build": [
            "{{ properties.commandBuild }}",
            "{{ properties.commandInstall }}"
          ],
          "clean": "{{ properties.commandClean }}",
          "lock": "{{ properties.commandConanLockNative }}",
          "conanGraphInfo": "conan graph info {{ properties.argsConanShared }} {{ properties.argsConanNative }} ."
        }
      },
      "native-xpack": {
        "inherit": [
          "native"
        ],
        "actions": {
          "clang": "clang"
        },
        "properties": {
          "buildType": "release",
          "toolchain": "clang"
        },
        "devDependencies": {
          "@xpack-dev-tools/clang": "17.0.6-1.1"
        }
      },
      "wasm": {
        "inherit": [
          "native"
        ],
        "properties": {
          "buildType": "release",
          "toolchain": "emscripten",
          "platformId": "emscripten-wasm32"
        },
        "actions": {
          "prepare": [
            "{{ properties.commandDependenciesWASM }}",
            "{{ properties.commandPrepareWASM }}"
          ],
          "lock": "{{ properties.commandConanLockWASM }}"
        }
      },
      "native-debug": {
        "inherit": [
          "native"
        ],
        "properties": {
          "buildType": "debug"
        }
      },
      "native-xpack-debug": {
        "inherit": [
          "native-xpack"
        ],
        "properties": {
          "buildType": "debug"
        }
      },
      "wasm-debug": {
        "inherit": [
          "wasm"
        ],
        "properties": {
          "buildType": "debug"
        },
        "actions": {
          "prepare": [
            "{{ properties.commandDependenciesWASM }}",
            "{{ properties.commandPrepareWASM }}"
          ]
        }
      }
    }
  }
